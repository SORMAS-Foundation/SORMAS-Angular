@use '~@angular/material' as mat;
@mixin button-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  :root {
    .mat-button-focus-overlay {
      background-color: transparent !important;
    }

    .mat-button.mat-primary:not(.mat-button-disabled) {
      &:hover,
      &:focus,
      &:active {
        color: mat.get-color-from-palette(mat.define-palette($primary, 800));
      }
    }

    .mat-button.mat-warn:not(.mat-button-disabled) {
      &:hover,
      &:focus,
      &:active {
        color: mat.get-color-from-palette(mat.define-palette($warn, 800));
      }
    }

    .mat-button.mat-button-disabled {
      color: mat.get-color-from-palette(mat.define-palette($accent, 400));
    }

    .mat-stroked-button {
      border-width: 2px;
      border-color: currentColor;
    }

    .mat-stroked-button.mat-primary:not(.mat-button-disabled) {
      border-color: currentColor;

      &:hover {
        color: mat.get-color-from-palette(mat.define-palette($primary, 800));
      }

      &:active,
      &:focus {
        background-color: mat.get-color-from-palette(mat.define-palette($primary, 50));
        color: mat.get-color-from-palette(mat.define-palette($primary, 700));
      }
    }

    .mat-stroked-button.mat-warn:not(.mat-button-disabled) {
      &:hover {
        color: mat.get-color-from-palette(mat.define-palette($warn, 800));
      }

      &:active,
      &:focus {
        background-color: mat.get-color-from-palette(mat.define-palette($warn, 50));
        color: mat.get-color-from-palette(mat.define-palette($warn, 700));
      }
    }

    .mat-stroked-button.mat-button-disabled {
      border-color: mat.get-color-from-palette(mat.define-palette($accent, 200));
      color: mat.get-color-from-palette(mat.define-palette($accent, 400));
    }

    .mat-flat-button.mat-primary:not(.mat-button-disabled) {
      &:hover {
        background-color: mat.get-color-from-palette(mat.define-palette($primary, 800));
      }

      &:active,
      &:focus {
        background-color: mat.get-color-from-palette(mat.define-palette($primary, 900));
      }
    }

    .mat-flat-button.mat-warn:not(.mat-button-disabled) {
      &:hover {
        background-color: mat.get-color-from-palette(mat.define-palette($warn, 800));
      }

      &:active,
      &:focus {
        background-color: mat.get-color-from-palette(mat.define-palette($warn, 900));
      }
    }

    .mat-flat-button.mat-button-disabled {
      background-color: mat.get-color-from-palette(mat.define-palette($accent, 50));
      color: mat.get-color-from-palette(mat.define-palette($accent, 400));
    }

    .mat-icon-button.small {
      width: 24px;
      height: 24px;

      .mat-button-wrapper {
        display: block;
        line-height: 24px;
      }

      .mat-icon {
        display: block;
        font-size: 16px;
      }
    }
  }
}
