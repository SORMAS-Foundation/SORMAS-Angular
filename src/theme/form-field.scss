@use '~@angular/material' as mat;
@mixin form-field-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  :root {
    .datetime-picker {
      .mat-form-field-label-wrapper {
        max-width: 100%;
      }
    }

    .column-picker-wrapper {
      .mat-form-field-appearance-outline .mat-form-field-wrapper {
        margin-top: 0;
        margin-bottom: 0;
      }
    }

    .mat-form-field-appearance-fill {
      .mat-form-field-outline > * {
        border-width: 0;
      }

      .mat-form-field-underline {
        display: none;
      }

      .mat-form-field-flex {
        align-items: center;
        background-color: map-get($sormas-accent, 50);
        border-radius: 4px;
      }
    }

    .mat-form-field-appearance-outline,
    .mat-form-field-appearance-fill {
      &.mat-form-field {
        display: block;
      }

      .mat-form-field-flex {
        padding: 0 16px;
      }

      .mat-form-field-infix {
        padding: 0.8em 0;
        border-top-width: 0;
      }

      .mat-form-field-label {
        color: currentColor;
      }

      .mat-form-field-outline-gap {
        border-top-color: initial !important;
      }

      .mat-form-field-outline {
        top: 0;

        .mat-form-field-outline-start,
        .mat-form-field-outline-gap,
        .mat-form-field-outline-end {
          border-width: 2px;
        }
      }

      &:not(.mat-form-field-disabled, .mat-form-field-invalid) .mat-form-field-outline {
        color: mat.get-color-from-palette(mat.define-palette($accent, 400));
      }

      &.mat-form-field-disabled .mat-form-field-outline {
        color: mat.get-color-from-palette(mat.define-palette($accent, 200));
      }

      &:not(.mat-form-field-invalid) {
        .mat-form-field-outline-thick {
          color: mat.get-color-from-palette(mat.define-palette($primary, 700));
        }
      }

      &.mat-form-field-invalid {
        .mat-form-field-outline-thick,
        .mat-select-arrow,
        .mat-button-wrapper {
          color: mat.get-color-from-palette(mat.define-palette($warn, 300));
        }

        .mat-form-field-label {
          color: currentColor;
        }
      }

      .mat-form-field-wrapper {
        padding-top: 0;
        padding-bottom: 0;
        margin: 0.5rem 0;
      }

      .mat-form-field-label-wrapper {
        top: -20px;
        left: -16px;
        min-width: 128px;
        padding-top: 0;
      }

      &.mat-form-field-has-label {
        .mat-form-field-wrapper,
        .mat-form-field-label-wrapper {
          padding-top: 28px;
        }
      }

      .mat-form-field-subscript-wrapper {
        width: 100%;
        padding: 0 4px;
      }

      &.has-hint {
        .mat-form-field-wrapper {
          padding-bottom: 1em;
        }
      }

      &.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {
        max-width: 100%;
        transform: translateY(-1.59375em);
      }

      &.readonly {
        .mat-form-field-flex {
          padding: 0;
        }

        .mat-form-field-outline {
          display: none;
        }

        .mat-form-field-label-wrapper {
          top: -8px;
          left: 0;
          padding-top: 0;
          font-size: 12px;
        }

        .mat-form-field-infix {
          padding: 8px 0;
        }

        &.mat-form-field-has-label {
          .mat-form-field-wrapper,
          .mat-form-field-label-wrapper {
            padding-top: 18px;
          }
        }

        input {
          font-weight: 500;
        }
      }

      .required {
        color: mat.get-color-from-palette(mat.define-palette($warn, 300));
      }

      &.search-multiselect {
        display: inline-block;
        color: mat.get-color-from-palette(mat.define-palette($primary, 700));

        &:hover,
        &:focus {
          color: mat.get-color-from-palette(mat.define-palette($primary, 800));
        }

        &.mat-form-field-has-label .mat-form-field-label-wrapper {
          width: auto;
        }

        .mat-form-field-flex {
          height: 37px;
          padding-right: 0;
          margin-top: 0;
        }

        .mat-form-field-infix {
          width: auto;
        }

        &.search-multiselect-opened {
          .mat-form-field-outline > * {
            background-color: mat.get-color-from-palette(mat.define-palette($primary, 50));
          }
        }

        .mat-select-value,
        .mat-select-arrow-wrapper {
          display: none;
        }

        .mat-form-field-wrapper {
          padding-top: 0;
        }

        .mat-form-field-label-wrapper {
          position: static;
          display: block;
          min-width: unset;
          padding: 0;
          margin-top: -16px;
          margin-right: 8px;
        }

        .mat-form-field-label {
          position: static;
          width: auto;
          padding: 0;
          font-weight: 500;
          line-height: 36px;
          transform: none !important;
        }

        .mat-form-field-outline-start {
          border-radius: 4px 0 0 4px;
        }

        .mat-form-field-outline-end {
          border-radius: 0 4px 4px 0;
        }

        &:not(.mat-form-field-disabled, .mat-form-field-invalid) .mat-form-field-outline {
          color: currentColor;
        }
      }
    }

    .size-medium .mat-form-field-appearance-outline {
      &.mat-form-field-has-label .mat-form-field-label-wrapper {
        width: 230px;
      }
    }

    .size-large .mat-form-field-appearance-outline {
      &.mat-form-field-has-label .mat-form-field-label-wrapper {
        width: 330px;
      }
    }

    .size-auto .mat-form-field-appearance-outline {
      &.mat-form-field-has-label .mat-form-field-label-wrapper {
        width: auto;
      }
    }
  }
}
