/**
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.64.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ActionStatus } from './actionStatus';
import { CaseReferenceDto } from './caseReferenceDto';
import { CommunityReferenceDto } from './communityReferenceDto';
import { CriteriaDateType } from './criteriaDateType';
import { DateFilterOption } from './dateFilterOption';
import { Disease } from './disease';
import { DiseaseVariant } from './diseaseVariant';
import { DistrictReferenceDto } from './districtReferenceDto';
import { EntityRelevanceStatus } from './entityRelevanceStatus';
import { EventGroupReferenceDto } from './eventGroupReferenceDto';
import { EventIdentificationSource } from './eventIdentificationSource';
import { EventInvestigationStatus } from './eventInvestigationStatus';
import { EventManagementStatus } from './eventManagementStatus';
import { EventReferenceDto } from './eventReferenceDto';
import { EventSourceType } from './eventSourceType';
import { EventStatus } from './eventStatus';
import { FacilityReferenceDto } from './facilityReferenceDto';
import { FacilityType } from './facilityType';
import { PersonReferenceDto } from './personReferenceDto';
import { RegionReferenceDto } from './regionReferenceDto';
import { RiskLevel } from './riskLevel';
import { SpecificRisk } from './specificRisk';
import { TypeOfPlace } from './typeOfPlace';
import { UserReferenceDto } from './userReferenceDto';
import { UserRole } from './userRole';

export interface EventCriteria {
  eventStatus?: EventStatus;
  riskLevel?: RiskLevel;
  specificRisk?: SpecificRisk;
  eventInvestigationStatus?: EventInvestigationStatus;
  disease?: Disease;
  diseaseVariant?: DiseaseVariant;
  reportingUserRole?: UserRole;
  deleted?: boolean;
  region?: RegionReferenceDto;
  district?: DistrictReferenceDto;
  community?: CommunityReferenceDto;
  relevanceStatus?: EntityRelevanceStatus;
  eventDateFrom?: Date;
  eventDateTo?: Date;
  eventDateType?: CriteriaDateType;
  dateFilterOption?: DateFilterOption;
  eventEvolutionDateFrom?: Date;
  eventEvolutionDateTo?: Date;
  evolutionDateFilterOption?: DateFilterOption;
  responsibleUser?: UserReferenceDto;
  freeText?: string;
  freeTextEventParticipants?: string;
  freeTextEventGroups?: string;
  srcType?: EventSourceType;
  caze?: CaseReferenceDto;
  userFilterIncluded?: boolean;
  typeOfPlace?: TypeOfPlace;
  person?: PersonReferenceDto;
  facilityType?: FacilityType;
  facility?: FacilityReferenceDto;
  superordinateEvent?: EventReferenceDto;
  eventGroup?: EventGroupReferenceDto;
  excludedUuids?: Array<string>;
  hasNoSuperordinateEvent?: boolean;
  eventManagementStatus?: EventManagementStatus;
  eventIdentificationSource?: EventIdentificationSource;
  actionStatus?: ActionStatus;
  actionChangeDateFrom?: Date;
  actionChangeDateTo?: Date;
  actionChangeDateFilterOption?: DateFilterOption;
  actionDateFrom?: Date;
  actionDateTo?: Date;
  actionDateFilterOption?: DateFilterOption;
  onlyEntitiesNotSharedWithExternalSurvTool?: boolean;
  onlyEntitiesSharedWithExternalSurvTool?: boolean;
  onlyEntitiesChangedSinceLastSharedWithExternalSurvTool?: boolean;
}
