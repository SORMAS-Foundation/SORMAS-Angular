/**
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.64.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { CaseClassification } from './caseClassification';
import { CaseOrigin } from './caseOrigin';
import { CaseOutcome } from './caseOutcome';
import { CommunityReferenceDto } from './communityReferenceDto';
import { CriteriaDateType } from './criteriaDateType';
import { DateFilterOption } from './dateFilterOption';
import { Disease } from './disease';
import { DiseaseVariant } from './diseaseVariant';
import { DistrictReferenceDto } from './districtReferenceDto';
import { EntityRelevanceStatus } from './entityRelevanceStatus';
import { FacilityReferenceDto } from './facilityReferenceDto';
import { FacilityType } from './facilityType';
import { FacilityTypeGroup } from './facilityTypeGroup';
import { FollowUpStatus } from './followUpStatus';
import { InvestigationStatus } from './investigationStatus';
import { PersonReferenceDto } from './personReferenceDto';
import { PointOfEntryReferenceDto } from './pointOfEntryReferenceDto';
import { PresentCondition } from './presentCondition';
import { RegionReferenceDto } from './regionReferenceDto';
import { SymptomJournalStatus } from './symptomJournalStatus';
import { UserReferenceDto } from './userReferenceDto';
import { UserRole } from './userRole';
import { VaccinationStatus } from './vaccinationStatus';

export interface CaseCriteria {
  reportingUserRole?: UserRole;
  disease?: Disease;
  diseaseVariant?: DiseaseVariant;
  outcome?: CaseOutcome;
  caseClassification?: CaseClassification;
  investigationStatus?: InvestigationStatus;
  presentCondition?: PresentCondition;
  region?: RegionReferenceDto;
  district?: DistrictReferenceDto;
  community?: CommunityReferenceDto;
  healthFacility?: FacilityReferenceDto;
  pointOfEntry?: PointOfEntryReferenceDto;
  surveillanceOfficer?: UserReferenceDto;
  newCaseDateFrom?: Date;
  newCaseDateTo?: Date;
  creationDateFrom?: Date;
  creationDateTo?: Date;
  newCaseDateType?: CriteriaDateType;
  dateFilterOption?: DateFilterOption;
  person?: PersonReferenceDto;
  mustHaveNoGeoCoordinates?: boolean;
  mustBePortHealthCaseWithoutFacility?: boolean;
  mustHaveCaseManagementData?: boolean;
  withoutResponsibleOfficer?: boolean;
  withExtendedQuarantine?: boolean;
  withReducedQuarantine?: boolean;
  deleted?: boolean;
  nameUuidEpidNumberLike?: string;
  eventLike?: string;
  onlyCasesWithEvents?: boolean;
  reportingUserLike?: string;
  caseOrigin?: CaseOrigin;
  relevanceStatus?: EntityRelevanceStatus;
  sourceCaseInfoLike?: string;
  quarantineTo?: Date;
  birthdateYYYY?: number;
  birthdateMM?: number;
  birthdateDD?: number;
  followUpStatus?: FollowUpStatus;
  followUpUntilTo?: Date;
  followUpUntilFrom?: Date;
  followUpVisitsFrom?: Date;
  followUpVisitsTo?: Date;
  followUpVisitsInterval?: number;
  symptomJournalStatus?: SymptomJournalStatus;
  vaccinationStatus?: VaccinationStatus;
  reportDateTo?: Date;
  facilityTypeGroup?: FacilityTypeGroup;
  facilityType?: FacilityType;
  includeCasesFromOtherJurisdictions?: boolean;
  onlyContactsFromOtherInstances?: boolean;
  onlyCasesWithReinfection?: boolean;
  onlyEntitiesNotSharedWithExternalSurvTool?: boolean;
  onlyEntitiesSharedWithExternalSurvTool?: boolean;
  onlyEntitiesChangedSinceLastSharedWithExternalSurvTool?: boolean;
  onlyCasesWithDontShareWithExternalSurvTool?: boolean;
  onlyShowCasesWithFulfilledReferenceDefinition?: boolean;
}
